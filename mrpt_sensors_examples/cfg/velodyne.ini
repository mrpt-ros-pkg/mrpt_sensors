# -------------------------------------------------------------------
#  Config file for the `rawlog-grabber` MRPT application.
#  Usage: 
#      rawlog-grabber CONFIG_FILE.ini
#
#  Each section `[XXXXX]` but `[global]` defines a dedicated thread where a 
#  sensor-specific driver runs. Each thread collects observations in parallel 
#  and the main thread sort them by timestamp and dumps them to a RAWLOG file.
#  The driver for each thread is set with the field `driver`, which must
#  match the name of any of the classes in mrpt::hwdrivers implementing 
#  a CGenericSensor.
#
# Read more online: 
# https://www.mrpt.org/list-of-mrpt-apps/application-rawlog-grabber/
# -------------------------------------------------------------------

# =======================================================
#  SENSOR: Velodyne LIDAR
# =======================================================
[Velodyne]
driver		    = CVelodyneScanner
process_rate	= 1000		// Hz

sensorLabel		= Velodyne1

# ---- Sensor description ----
#calibration_file = PUT_HERE_FULL_PATH_TO_CALIB_FILE.xml      // Optional but recommended: put here your vendor-provided calibration file
model            = VLP16          // Can be any of: `VLP16`,`HDL32`,`HDL64`  (It is used to load default calibration file. Parameter not required if `calibration_file` is provided.
# ---- Online operation ----

# IP address of the device. UDP packets from other IPs will be ignored. Leave commented or blank
# if only one scanner is present (no IP filtering)
#device_ip       = 10.0.0.100

#rpm             = 300        // Sensor RPM (Default: unchanged). Requires setting `device_ip`
#return_type     = STRONGEST  // Any of: 'STRONGEST', 'LAST', 'DUAL'. Requires setting `device_ip`

# ---- Offline operation ----
# If uncommented, this class will read from the PCAP instead of connecting and listeling
# for online network packets.
# pcap_input     = PUT_FULL_PATH_TO_PCAP_LOG_FILE.pcap
# pcap_read_once = false   // Do not loop
# pcap_read_fast = false    // fast forward skipping non-velodyne packets
# pcap_read_full_scan_delay_ms = 100 // Used to simulate a reasonable number of full scans / second
# pcap_repeat_delay = 0.0   // seconds

# ---- Save to PCAP file ----
# If uncommented, a PCAP file named `[pcap_output_prefix]_[DATE_TIME].pcap` will be
# written simultaneously to the normal operation of this class.
# pcap_output     = velodyne_log

# 3D position of the sensor on the vehicle:
pose_x     = 0    // 3D position (meters)
pose_y     = 0
pose_z     = 0
pose_yaw   = 0    // 3D orientation (degrees)
pose_pitch = 0
pose_roll  = 0
